#!/usr/bin/env bash

bp_dir=$(cd $(dirname $0); cd ..; pwd)
source $bp_dir/bin/common.sh

build_dir=$1
run_dir="/app"
cache_dir=$2
env_dir=$3
vendor_dir=$(stagetime_path "vendor")
mono_url="https://s3-eu-west-1.amazonaws.com/monodeploys/mono-3.12.0-Sgen.tar.gz"


# The target exe (maybe this should be communicated by file from detect step)
# This must be done prior to download and unzip of mono otherwise we will pick
# up stuff from the mono runtime.
target=$(runtime_path $(get_target))


# fetch mono
status "Downloading and installing mono"
mkdir -p $vendor_dir
curl $mono_url -s -o - | tar xzf - -C $vendor_dir


# update certificates - not sure about this as runtime path ony available at runtime,
# may need to move the stuff below into bootstrap.
status "Installing Certificates"
#ln -s $(stagetime_path "vendor") $(runtime_path "vendor")
#$(stagetime_path "vendor/mono/bin/mozroots") --import --sync


# install environment variable injection
status "Installing environment variable injector"
mkdir -p $vendor_dir/build_pack
cp -f $bp_dir/resources/AppSettingsAutoReconfiguration/bin/*.* $vendor_dir/build_pack


# make bootstrap
status "Building Bootstrap"
config=$(runtime_path "vendor/build_pack/AppSettingsAutoReconfiguration.exe")
mono=$(runtime_path "vendor/mono/bin/mono")
mono_flags="--gc=sgen"
bootstrap=$(stagetime_path "bootstrap")

# the actual file.
cat << EOF > $bootstrap
#!/usr/bin/env bash
uname -r
$mono $mono_flags --version
$mono $mono_flags $config $target.config
$mono $mono_flags $target

#echo "LISTENING ON PORT " \$PORT
#while true
#do
#{ echo -ne "HTTP/1.0 200 OK\r\n\r\n"; echo "HELLO"; } | nc -l -p \$PORT
#done

EOF

echo "web: ./bootstrap" > $build_dir/Procfile

# Make it executable
chmod 777 $bootstrap


